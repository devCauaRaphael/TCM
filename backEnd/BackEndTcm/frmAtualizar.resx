<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>